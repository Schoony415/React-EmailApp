{"ast":null,"code":"var _jsxFileName = \"/Users/j2153034/Documents/GitHub/react-app/react-checkpoint/src/MainDisp.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MainDisp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailList: [],\n      address: props.address\n    };\n  }\n\n  makeRequest() {\n    console.log(\"making request\");\n    fetch(this.state.address, {\n      method: 'GET'\n    }).then(response => {\n      console.log(response);\n      /*this is just my returned packet at this point*/\n\n      return response;\n      /* returning response because I'm still dealing with the packet in the next block */\n    }).then(response => {\n      if (response.ok) console.log(\"SUCCSESS!!\");else throw new Error(\"Request was bad: \" + response.status);\n      return response.json();\n      /*turning to json spits out the body from the packet*/\n    }).then(data => {\n      console.log(data);\n      /*this is now the body obj*/\n\n      this.setState({\n        emailList: data\n      });\n    }).catch(e => console.error(e));\n  } //<li key={\"e\"+i}> {JSON.stringify(email)} </li>\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"--Main Disp--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        children: [\"Email Server: \", this.state.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 60\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.makeRequest.bind(this),\n        children: \"Get Emails\"\n      }, \"getButton\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), this.state.emailList.map((email, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"boxWrapped\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"boxHolder\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"boxSend\",\n            children: [\" \", email.sender]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"boxRec\",\n            children: [\" \", email.recipient]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"boxHolder\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"boxSubject\",\n            children: [\" \", email.subject]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"boxDate\",\n            children: [\" \", email.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"boxBody\",\n          children: [\" \", email.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))]\n    }, \"mainReturn\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n\n}\nMainDisp.propTypes = {\n  Truth: PropTypes.bool,\n  address: PropTypes.string\n};","map":{"version":3,"sources":["/Users/j2153034/Documents/GitHub/react-app/react-checkpoint/src/MainDisp.js"],"names":["React","Component","PropTypes","MainDisp","constructor","props","state","emailList","address","makeRequest","console","log","fetch","method","then","response","ok","Error","status","json","data","setState","catch","e","error","render","bind","map","email","i","sender","recipient","subject","date","message","propTypes","Truth","bool","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAgC;AAC3CG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAC,EADD;AAETC,MAAAA,OAAO,EAACH,KAAK,CAACG;AAFL,KAAb;AAIH;;AAEDC,EAAAA,WAAW,GAAE;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAC,IAAAA,KAAK,CAAC,KAAKN,KAAL,CAAWE,OAAZ,EAAqB;AAACK,MAAAA,MAAM,EAAE;AAAT,KAArB,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AAAuB;;AACvB,aAAOA,QAAP;AAAgB;AACjB,KAJD,EAKCD,IALD,CAKMC,QAAQ,IAAI;AAChB,UAAGA,QAAQ,CAACC,EAAZ,EAAgBN,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAhB,KACK,MAAM,IAAIM,KAAJ,CAAU,sBAAoBF,QAAQ,CAACG,MAAvC,CAAN;AACL,aAAOH,QAAQ,CAACI,IAAT,EAAP;AAAuB;AACxB,KATD,EAUCL,IAVD,CAUMM,IAAI,IAAI;AACZV,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AAAiB;;AACjB,WAAKC,QAAL,CAAc;AAACd,QAAAA,SAAS,EAACa;AAAX,OAAd;AACD,KAbD,EAcCE,KAdD,CAcOC,CAAC,IAAIb,OAAO,CAACc,KAAR,CAAcD,CAAd,CAdZ;AAeD,GA1B0C,CA2B/C;;;AACIE,EAAAA,MAAM,GAAE;AACJ,wBAAO;AAAA,8BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAEH;AAAA,qCAAqB,KAAKnB,KAAL,CAAWE,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFG,eAE4C;AAAA;AAAA;AAAA;AAAA,cAF5C,eAGH;AAAwB,QAAA,OAAO,EAAE,KAAKC,WAAL,CAAiBiB,IAAjB,CAAsB,IAAtB,CAAjC;AAAA;AAAA,SAAY,WAAZ;AAAA;AAAA;AAAA;AAAA,cAHG,eAIH;AAAA;AAAA;AAAA;AAAA,cAJG,EAKF,KAAKpB,KAAL,CAAWC,SAAX,CAAqBoB,GAArB,CAAyB,CAACC,KAAD,EAAOC,CAAP,kBAC1B;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA,gCACA;AAAK,UAAA,KAAK,EAAE,WAAZ;AAAA,kCACI;AAAK,YAAA,KAAK,EAAC,SAAX;AAAA,4BAAuBD,KAAK,CAACE,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,KAAK,EAAC,QAAX;AAAA,4BAAsBF,KAAK,CAACG,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAKA;AAAK,UAAA,KAAK,EAAE,WAAZ;AAAA,kCACI;AAAK,YAAA,KAAK,EAAC,YAAX;AAAA,4BAA0BH,KAAK,CAACI,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,KAAK,EAAC,SAAX;AAAA,4BAAuBJ,KAAK,CAACK,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,eASI;AAAK,UAAA,KAAK,EAAC,SAAX;AAAA,0BAAuBL,KAAK,CAACM,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,CALE;AAAA,OAAS,YAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AAmBH;;AAhD0C;AAoD/C/B,QAAQ,CAACgC,SAAT,GAAqB;AACrBC,EAAAA,KAAK,EAAGlC,SAAS,CAACmC,IADG;AAErB7B,EAAAA,OAAO,EAAEN,SAAS,CAACoC;AAFE,CAArB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class MainDisp extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            emailList:[],\n            address:props.address,\n        }\n    }\n\n    makeRequest(){\n      console.log(\"making request\")\n      fetch(this.state.address, {method: 'GET'})\n      .then(response => {\n        console.log(response); /*this is just my returned packet at this point*/\n        return response /* returning response because I'm still dealing with the packet in the next block */\n      })\n      .then(response => {\n        if(response.ok) console.log(\"SUCCSESS!!\");\n        else throw new Error(\"Request was bad: \"+response.status);\n        return response.json() /*turning to json spits out the body from the packet*/\n      })\n      .then(data => {\n        console.log(data)/*this is now the body obj*/\n        this.setState({emailList:data})\n      })\n      .catch(e => console.error(e))\n    }\n//<li key={\"e\"+i}> {JSON.stringify(email)} </li>\n    render(){\n        return(<div key=\"mainReturn\">\n            <h2>--Main Disp--</h2>\n            <text>Email Server: {this.state.address}</text><br />\n            <button key=\"getButton\" onClick={this.makeRequest.bind(this)}>Get Emails</button>\n            <hr />\n            {this.state.emailList.map((email,i)=>\n            <div class=\"boxWrapped\"> \n            <div class= \"boxHolder\">\n                <div class=\"boxSend\"> {email.sender}</div>\n                <div class=\"boxRec\"> {email.recipient}</div>\n            </div>\n            <div class= \"boxHolder\">\n                <div class=\"boxSubject\"> {email.subject}</div>\n                <div class=\"boxDate\"> {email.date}</div>\n            </div>\n                <div class=\"boxBody\"> {email.message}</div>\n            </div>\n            )}\n        </div>)\n    }\n\n}\n\nMainDisp.propTypes = {\nTruth : PropTypes.bool,\naddress: PropTypes.string,\n\n}"]},"metadata":{},"sourceType":"module"}