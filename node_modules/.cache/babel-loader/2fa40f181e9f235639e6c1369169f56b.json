{"ast":null,"code":"var _jsxFileName = \"/Users/j2153034/Documents/GitHub/react-app/react-checkpoint/src/App.js\";\n//import logo from './logo.svg';\nimport './App.css'; //const Myaddr = \"http://localhost:3000\"\n//const Myaddr = \"http://localhost:8080/donut\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Myaddr = \"http://localhost:3001/emails\"; // function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nfunction App() {\n  function jsonreturn()\n  /*figuring out how to nicely display obj to webpage*/\n  {\n    return JSON.stringify({\n      title: 'hold this',\n      value: 500,\n      serialize: \"this\"\n    });\n  }\n\n  function makeRequest() {\n    console.log(\"making request\");\n    fetch(Myaddr, {\n      method: 'GET'\n    }).then(response => {\n      console.log(response);\n      /*this is just my returned packet at this point*/\n\n      return response;\n      /* returning response because I'm still dealing with the packet in the next block */\n    }).then(response => {\n      if (response.ok) console.log(\"SUCCSESS!!\");else throw new Error(\"Request was bad: \" + response.status);\n      return response.json();\n      /*turning to json spits out the body from the packet*/\n    }).then(data => {\n      console.log(data);\n      /*this is now the body obj*/\n    }).catch(e => console.error(e));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"custom title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \" my custom app be going here \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 47\n    }, this), jsonreturn(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Make Network Request using Fetch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 50\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: makeRequest,\n      children: \"Send Request\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 56\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 12\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/j2153034/Documents/GitHub/react-app/react-checkpoint/src/App.js"],"names":["Myaddr","App","jsonreturn","JSON","stringify","title","value","serialize","makeRequest","console","log","fetch","method","then","response","ok","Error","status","json","data","catch","e","error"],"mappings":";AAAA;AACA,OAAO,WAAP,C,CAEA;AACA;;;AACA,MAAMA,MAAM,GAAG,8BAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,GAAT,GAAe;AACb,WAASC,UAAT;AAAqB;AAAqD;AAC1E,WAAOC,IAAI,CAACC,SAAL,CAAgB;AAACC,MAAAA,KAAK,EAAC,WAAP;AAAoBC,MAAAA,KAAK,EAAC,GAA1B;AAA+BC,MAAAA,SAAS,EAAC;AAAzC,KAAhB,CAAP;AACD;;AACD,WAASC,WAAT,GAAsB;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAC,IAAAA,KAAK,CAACX,MAAD,EAAS;AAACY,MAAAA,MAAM,EAAE;AAAT,KAAT,CAAL,CACCC,IADD,CACMC,QAAQ,IAAI;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AAAuB;;AACvB,aAAOA,QAAP;AAAgB;AACjB,KAJD,EAKCD,IALD,CAKMC,QAAQ,IAAI;AAChB,UAAGA,QAAQ,CAACC,EAAZ,EAAgBN,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAhB,KACK,MAAM,IAAIM,KAAJ,CAAU,sBAAoBF,QAAQ,CAACG,MAAvC,CAAN;AACL,aAAOH,QAAQ,CAACI,IAAT,EAAP;AAAuB;AACxB,KATD,EAUCL,IAVD,CAUMM,IAAI,IAAI;AACZV,MAAAA,OAAO,CAACC,GAAR,CAAYS,IAAZ;AAAiB;AAClB,KAZD,EAaCC,KAbD,CAaOC,CAAC,IAAIZ,OAAO,CAACa,KAAR,CAAcD,CAAd,CAbZ;AAcD;;AAEC,sBAAS;AAAA,4BACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,eAEP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFO,eAEmC;AAAA;AAAA;AAAA;AAAA,YAFnC,EAGNnB,UAAU,EAHJ,eAGO;AAAA;AAAA;AAAA;AAAA,YAHP,eAIP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJO,eAIsC;AAAA;AAAA;AAAA;AAAA,YAJtC,eAKP;AAAQ,MAAA,OAAO,EAAEM,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALO,eAK4C;AAAA;AAAA;AAAA;AAAA,YAL5C;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AASD;;KA/BQP,G;AAmCT,eAAeA,GAAf","sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\n\n//const Myaddr = \"http://localhost:3000\"\n//const Myaddr = \"http://localhost:8080/donut\"\nconst Myaddr = \"http://localhost:3001/emails\"\n\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\nfunction App() {\n  function jsonreturn()/*figuring out how to nicely display obj to webpage*/{\n  return JSON.stringify( {title:'hold this', value:500, serialize:\"this\"} )\n}\nfunction makeRequest(){\n  console.log(\"making request\")\n  fetch(Myaddr, {method: 'GET'})\n  .then(response => {\n    console.log(response); /*this is just my returned packet at this point*/\n    return response /* returning response because I'm still dealing with the packet in the next block */\n  })\n  .then(response => {\n    if(response.ok) console.log(\"SUCCSESS!!\");\n    else throw new Error(\"Request was bad: \"+response.status);\n    return response.json() /*turning to json spits out the body from the packet*/\n  })\n  .then(data => {\n    console.log(data)/*this is now the body obj*/\n  })\n  .catch(e => console.error(e))\n}\n\n  return ( <div>\n    <h1>custom title</h1>\n    <text> my custom app be going here </text><br/>\n    {jsonreturn()}<br/>\n    <text>Make Network Request using Fetch</text><br/>\n    <button onClick={makeRequest}>Send Request</button><br/>\n\n\n  </div>)\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}