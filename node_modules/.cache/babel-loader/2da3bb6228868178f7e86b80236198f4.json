{"ast":null,"code":"var _jsxFileName = \"/Users/j2153034/Documents/GitHub/react-app/react-checkpoint/src/MainDisp.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Email from \"./Email\"; //I had to do npm install to get dropdowns\n// import Dropdown from 'react-dropdown';\n// import 'react-dropdown/style.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MainDisp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emailList: [],\n      address: props.address,\n      selectedEmail: {}\n    };\n  }\n\n  makeRequest() {\n    console.log(\"making request\");\n    fetch(this.state.address + \"emails\", {\n      method: 'GET'\n    }).then(response => {\n      console.log(response);\n      /*this is just my returned packet at this point*/\n\n      return response;\n      /* returning response because I'm still dealing with the packet in the next block */\n    }).then(response => {\n      if (response.ok) console.log(\"SUCCSESS!!\");else throw new Error(\"Request was bad: \" + response.status);\n      return response.json();\n      /*turning to json spits out the body from the packet*/\n    }).then(data => {\n      console.log(data);\n      /*this is now the body obj*/\n\n      this.setState({\n        emailList: data\n      });\n    }).catch(e => console.error(e));\n  }\n\n  clickEmail(email) {\n    //console.log(\"email!!!\", email)\n    this.setState({\n      selectedEmail: email\n    }); //.then(console.log(this.state.selectedEmail))\n  } //map: <li key={\"e\"+i}> {JSON.stringify(email)} </li>\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"--Main Disp--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          children: [\"Email Server: \", this.state.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.makeRequest.bind(this),\n          children: \"Get Emails\"\n        }, \"getButton\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({\n              selectedEmail: {}\n            });\n          },\n          children: \" Back\"\n        }, \"back\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({\n              selectedEmail: {},\n              emailList: []\n            });\n          },\n          children: \" GoodBye\"\n        }, \"hide\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" Search\"\n        }, \"search\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"search subject\"\n        }, \"searchText\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"Email\",\n          name: \"SearchType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), \" Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"Subject\",\n          name: \"SearchType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), \" Subject\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), this.state.selectedEmail.id ? /*#__PURE__*/_jsxDEV(Email, {\n        view: \"long\",\n        email: this.state.selectedEmail\n      }, \"singleEmail\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this) : this.state.emailList.map((email, i) => /*#__PURE__*/_jsxDEV(Email, {\n        clicker: this.clickEmail.bind(this),\n        view: \"long\",\n        email: email\n      }, \"e\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this))]\n    }, \"mainReturn\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this);\n  }\n\n}\nMainDisp.propTypes = {\n  Truth: PropTypes.bool,\n  address: PropTypes.string\n};","map":{"version":3,"sources":["/Users/j2153034/Documents/GitHub/react-app/react-checkpoint/src/MainDisp.js"],"names":["React","Component","PropTypes","Email","MainDisp","constructor","props","state","emailList","address","selectedEmail","makeRequest","console","log","fetch","method","then","response","ok","Error","status","json","data","setState","catch","e","error","clickEmail","email","render","bind","id","map","i","propTypes","Truth","bool","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Email from \"./Email\"\n//I had to do npm install to get dropdowns\n// import Dropdown from 'react-dropdown';\n// import 'react-dropdown/style.css';\n\nexport default class MainDisp extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            emailList: [],\n            address: props.address,\n            selectedEmail: {},\n        }\n    }\n\n    makeRequest() {\n        console.log(\"making request\")\n        fetch(this.state.address + \"emails\", { method: 'GET' })\n            .then(response => {\n                console.log(response); /*this is just my returned packet at this point*/\n                return response /* returning response because I'm still dealing with the packet in the next block */\n            })\n            .then(response => {\n                if (response.ok) console.log(\"SUCCSESS!!\");\n                else throw new Error(\"Request was bad: \" + response.status);\n                return response.json() /*turning to json spits out the body from the packet*/\n            })\n            .then(data => {\n                console.log(data)/*this is now the body obj*/\n                this.setState({ emailList: data })\n            })\n            .catch(e => console.error(e))\n    }\n\n    clickEmail(email) {\n        //console.log(\"email!!!\", email)\n        this.setState({ selectedEmail: email })\n        //.then(console.log(this.state.selectedEmail))\n    }\n\n\n    //map: <li key={\"e\"+i}> {JSON.stringify(email)} </li>\n    render() {\n        return (<div key=\"mainReturn\">\n            <div>\n            <h2>--Main Disp--</h2>\n            <text>Email Server: {this.state.address}</text>\n            </div><div>\n            <button key=\"getButton\" onClick={this.makeRequest.bind(this)}>Get Emails</button>\n            <button key=\"back\"\n                onClick={() => { this.setState({ selectedEmail: {} }) }}\n            > Back\n            </button>\n            <button key=\"hide\"\n                onClick={() => { this.setState({ selectedEmail: {}, emailList: [] }) }}\n            > GoodBye\n            </button>\n            </div>\n            <div>\n            <button key=\"search\"\n            > Search\n            </button>\n            <input key=\"searchText\" type=\"text\" placeholder=\"search subject\"></input>\n            \n            \n        <input type=\"radio\" value=\"Email\" name=\"SearchType\" /> Email\n        <input type=\"radio\" value=\"Subject\" name=\"SearchType\" /> Subject\n        </div>\n\n        \n\n            <hr />\n            {this.state.selectedEmail.id ?\n                <Email key=\"singleEmail\"\n                    view=\"long\"\n                    email={this.state.selectedEmail}\n                />\n                :\n                this.state.emailList.map((email, i) =>\n                    <Email key={\"e\" + i}\n                        clicker={this.clickEmail.bind(this)}\n                        view=\"long\"\n                        email={email}\n                    />\n                )\n            }\n        </div>)\n    }\n}\n\nMainDisp.propTypes = {\n    Truth: PropTypes.bool,\n    address: PropTypes.string,\n\n}\n"]},"metadata":{},"sourceType":"module"}